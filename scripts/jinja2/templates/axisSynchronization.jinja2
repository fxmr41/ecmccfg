
#- =================================================================================
#- SYNCHRONIZATION
#- =================================================================================
#- Commands
ecmcConfigOrDie "Cfg.SetAxisPLCEnable({{ axis.id }},{{ plc.enable|default(0)|int }})"
ecmcConfigOrDie "Cfg.SetAxisAllowCommandsFromPLC({{ axis.id }},{{ plc.externalCommands|default(0)|int }})"

#- PLC code
{%- if plc.code is defined %}
    {%- for line in plc.code %}
        ecmcConfigOrDie "Cfg.AppendAxisPLCExpr({{ axis.id }})={{ line|replace(";", "|") }}"
    {%- endfor %}
{%- endif %}


{# ${SCRIPTEXEC} ${ecmccfg_DIR}loadAxisPLCFile.cmd "AX_ID={{axis.id}}, FILE=${OUTPUT_FILE}, PLC_MACROS='{{plc.macros|default('')}}'" #}

#- Cleanup
#- system "rm -f ${OUTPUT_FILE}"

#- PLC Encoder velocity filter
{%- if (plc.velocity_filter is defined) and (plc.velocity_filter.encoder is defined) %}
    ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize({{ axis.id }},{{ plc.velocity_filter.encoder.size|default(1)|int }})"
    ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable({{ axis.id }},{{ plc.velocity_filter.encoder.enable|default(0)|int }})"    
{%- else %}
    # WARNING: Please use updated yaml syntax for encoder velo filtering: plc.velocity_filter.encoder.x
    {%- if (plc.filter is defined) and (plc.filter.velocity is defined) %}
        ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize({{ axis.id }},{{ plc.filter.velocity.size|default(1) }})"
        ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable({{ axis.id }},{{ plc.filter.velocity.enable|default(0)|int }})"
    {%- else %}
        ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterSize({{ axis.id }}, 1)"
        ecmcConfigOrDie "Cfg.SetAxisPLCEncVelFilterEnable({{ axis.id }}, 0)"
    {%- endif %}
{%- endif %}

ecmcConfigOrDie "Cfg.SetAxisEncSourceType({{ axis.id }},{{ encoder.source|default(0)|int }})"

#- Move to different syntax because of old bad naming
#- PLC Encoder velocity velocity filter
{%- if (plc.velocity_filter is defined) and (plc.velocity_filter.trajectory is defined) %}
    ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize({{ axis.id }},{{ plc.velocity_filter.trajectory.size|default(1)|int }})"
    ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable({{ axis.id }},{{ plc.velocity_filter.trajectory.enable|default(0)|int }})"    
{%- else %}
    # WARNING: Please use updated yaml syntax for trajectory velo filtering:  plc.velocity_filter.trajectory.x)
    {%- if (plc.filter is defined) and (plc.filter.position is defined) %}
        ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize({{ axis.id }},{{ plc.filter.position.size|default(1) }})"
        ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable({{ axis.id }},{{ plc.filter.position.enable|default(0)|int }})"
    {%- else %}
        {%- if (plc.filter is defined) and (plc.filter.trajectory) %}
            ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize({{ axis.id }},{{ plc.filter.trajectory.size|default(1) }})"
            ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable({{ axis.id }},{{ plc.filter.trajectory.enable|default(0)|int }})"
        {%- else %}
            ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterSize({{ axis.id }}, 1)"
            ecmcConfigOrDie "Cfg.SetAxisPLCTrajVelFilterEnable({{ axis.id }}, 0)"
        {%- endif %}
    {%- endif %}
{%- endif %}

ecmcConfigOrDie "Cfg.SetAxisTrajSourceType({{ axis.id }},{{ trajectory.source|default(0)|int }})"
