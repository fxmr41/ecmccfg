#- =============================================================================
#- Input sensors
#- =============================================================================

{#- FWD #}
{%- if input.limit.forward == "plcOverride" %}
    ecmcConfigOrDie "Cfg.SetAxisLimitSwitchFwdPLCOverride({{ axis.id }},1)"
{%- else %}
    ecmcConfigOrDie "Cfg.LinkEcEntryToObject({{ input.limit.forward }},"ax{{ axis.id }}.mon.highlim")"
    ecmcConfigOrDie "Cfg.SetAxisLimitSwitchFwdPLCOverride({{ axis.id }},0)"
    {%- if input.limit.forwardPolarity is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonLimitFwdPolarity({{ axis.id }},{{ input.limit.forwardPolarity }})"        
    {%- endif %}
{%- endif %}

{#- BWD #}
{%- if input.limit.backward == "plcOverride" %}
    ecmcConfigOrDie "Cfg.SetAxisLimitSwitchBwdPLCOverride({{ axis.id }},1)"
{%- else %}
    ecmcConfigOrDie "Cfg.LinkEcEntryToObject({{ input.limit.backward }},"ax{{ axis.id }}.mon.lowlim")"
    ecmcConfigOrDie "Cfg.SetAxisLimitSwitchBwdPLCOverride({{ axis.id }},0)"
    {%- if input.limit.backwardPolarity is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonLimitBwdPolarity({{ axis.id }},{{ input.limit.backwardPolarity }})"
    {%- endif %}
{%- endif %}

{#- latch limit switches, for debouncing  #}
{%- if input.limit.latchInput is defined %}
    ecmcConfigOrDie "Cfg.SetAxisMonLatchLimit({{ axis.id }},{{ input.limit.latchInput|int }})"
{%- endif %}

{#- Home #}
{%- if input.home is defined %}
    {%- if input.home == "plcOverride" %}
        ecmcConfigOrDie "Cfg.SetAxisHomeSwitchPLCOverride({{ axis.id }},1)"
        #- Do not use hw-home sensor
        ecmcConfigOrDie "Cfg.SetAxisHomeSwitchEnable({{ axis.id }},0)"
    {%- else %}
        ecmcConfigOrDie "Cfg.LinkEcEntryToObject({{ input.home }},"ax{{ axis.id }}.mon.homesensor")"
        ecmcConfigOrDie "Cfg.SetAxisHomeSwitchEnable({{ axis.id }},1)"        
        {%- if input.homePolarity is defined %}
            ecmcConfigOrDie "Cfg.SetAxisMonHomeSwitchPolarity({{ axis.id }},{{ input.homePolarity }})"
        {%- endif %}
    {%- endif %}
{%- endif %}

{#- Interlock #}
{%- if input.interlock is defined %}
    ecmcConfigOrDie "Cfg.LinkEcEntryToObject({{ input.interlock }},"ax{{ axis.id }}.mon.extinterlock")"
    {%- if input.interlockPolarity is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonExtHWInterlockPolarity({{ axis.id }},{{ input.interlockPolarity }})"
    {%- endif %}
{%- endif %}

{#- Analog interlock like temperature sensors#}
{%- if (input.analog is defined) and (input.analog.interlock is defined) %}
    ecmcConfigOrDie "Cfg.LinkEcEntryToObject({{ input.analog.interlock }},"ax{{ axis.id }}.mon.analoginterlock")"
    {%- if input.analog.enable is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonEnableAnalogInterlock({{ axis.id }},{{ input.analog.enable|default(1)|int}})"
    {%- else %}
        ecmcConfigOrDie "Cfg.SetAxisMonEnableAnalogInterlock({{ axis.id }},1)"
    {%- endif %}
    {%- if input.analog.interlockPolarity is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonAnalogInterlockPolarity({{ axis.id }},{{ input.analog.interlockPolarity }})"
    {%- endif %}
    {%- if input.analog.rawLimit is defined %}
        ecmcConfigOrDie "Cfg.SetAxisMonAnalogInterlockRawLimit({{ axis.id }},{{ input.analog.rawLimit }})"
    {%- endif %}
{%- endif %}
