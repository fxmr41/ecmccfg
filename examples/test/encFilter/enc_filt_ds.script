co##############################################################################
## Example config for filtering a encoder signal by use of data storage. 
## Note: This works ONLY aslong as the encoder signal is not over/under-flowing any bit limits (like from 0 to 65xxx)..
## Therefore, to reduce problem, if el5101, then use the 32 bit version of config.
## Tha basic principle:
## 1. Write the encoder position to data storage e cah cycle (ds_append_data())
## 2. Write the average of the data storage (ds_get_avg()) values to a simulated ethercat entry.
## 3. Link the simulated ethercat entry to the actpos in the axis config file.
##
## To avoid issues with over/underflow it might be possible to use a virtuel axis for the encoder value (without scaling).
## Then this ax<id>.actpos can be written to the data storage instead. See other example in this dir.  

require ecmccfg

${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=1, HW_DESC=EL1018"
epicsEnvSet("SLAVE_INPUTS", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=2, HW_DESC=EL2808"
epicsEnvSet("SLAVE_OUTPUTS", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=3, HW_DESC=EL5101_32bit,"
epicsEnvSet("SLAVE_ENCODER", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=8, HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
epicsEnvSet("SLAVE_DRIVE", ${ECMC_EC_SLAVE_NUM})

# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput01,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput02,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput03,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput04,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput05,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput06,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput07,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput08,1)"
# END of ADDITIONAL SETUP

epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/el7037_enc_filt_ds_1.ax)

##############################################################################
## Data Storage: For encoder values
epicsEnvSet("ECMC_ID_DS_FILT",0)
epicsEnvSet("ECMC_FILT_SIZE", 10)
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=${ECMC_ID_DS_FILT}, DS_SIZE=${ECMC_FILT_SIZE}, SAMPLE_RATE_MS=100,DS_TYPE=2"

##############################################################################
## PLC 1: Implemnts a low pas filter. Writes filterend posiiton

# DS_FILT_ID = ID of ds to use as a filter id.
# PLC_ID     = ID of this PLC
# ENC_S_ID    = Slave id of encoder terminal
epicsEnvSet("ECMC_PLC_ID",0)
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=${ECMC_PLC_ID}, SAMPLE_RATE_MS=${ECMC_SAMPLE_RATE_MS},FILE=./plc/enc_filt_ds.plc, PLC_MACROS='PLC_ID=${ECMC_PLC_ID},ENC_S_ID=${SLAVE_ENCODER},DS_FILT_ID=${ECMC_ID_DS_FILT}'")

