co##############################################################################
## Example config for filtering a encoder signal by use of data storage and virtual axis. 
## Let virtual axis handle over/underflows
## Tha basic principle:
## 1. Write the virt axis encoder position to data storage (ds_append_data())
## 2. Write the average of the data storage (ds_get_avg()) values to a to extrenal encoder value of the physical axis.
##
## Known issues: Homing will not work..
##

require ecmccfg

#Configure EL1018 digital input terminal
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=1, HW_DESC=EL1018"
epicsEnvSet("SLAVE_INPUTS", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "HW_DESC=EL2808"
epicsEnvSet("SLAVE_OUTPUTS", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "HW_DESC=EL5101"
epicsEnvSet("SLAVE_ENCODER", ${ECMC_EC_SLAVE_NUM})

${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=8, HW_DESC=EL7037, CONFIG=-Motor-Trinamic-QMot-QSH4218-41-10-035"
epicsEnvSet("SLAVE_DRIVE", ${ECMC_EC_SLAVE_NUM})

# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput01,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput02,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput03,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput04,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput05,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput06,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput07,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${SLAVE_OUTPUTS},binaryOutput08,1)"
# END of ADDITIONAL SETUP

##############################################################################
## Data Storage: For encoder values
epicsEnvSet("ECMC_ID_DS_FILT",0)
epicsEnvSet("ECMC_FILT_SIZE", 10)
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=${ECMC_ID_DS_FILT}, DS_SIZE=${ECMC_FILT_SIZE}, SAMPLE_RATE_MS=100,DS_TYPE=2"

##############################################################################
## AXIS 1: physical axis
#
epicsEnvSet("PHYS_AXIS", "1")
epicsEnvSet("VIRT_AXIS" ,"2")

epicsEnvSet("DEV",       "$(IOC)")
$(SCRIPTEXEC) $(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/el7037_enc_filt_ds_virt_1.ax
$(SCRIPTEXEC) $(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./cfg/el7037_enc_filt_ds_virt_1.sax

##############################################################################
## AXIS 2: Virt encoder axis
#

epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) $(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./cfg/el7037_enc_filt_ds_virt_2.vax

##############################################################################
## PLC 1: Implemnts a low pas filter. Writes filterend posiiton

# DS_FILT_ID = ID of ds to use as a filter id.
# PLC_ID     = ID of this PLC
# VIRT_AX_ID = Axis id of virt encoder
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=${ECMC_PLC_ID}, SAMPLE_RATE_MS=${ECMC_SAMPLE_RATE_MS},FILE=./plc/enc_filt_virt_ds.plc, PLC_MACROS='${PLC_MACROS}'")
