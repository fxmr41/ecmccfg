###############################################################################################
# For help on syntax, variables and functions, please read the file: "plcSyntaxHelp.plc"
#
# PLC Functionality Demo:
#
#  Code Description:
#     1. Simple example with data storage
#        Put ethercat position data into data storage with scaling
#     2. Clear buffer when a value is above a threshold
#     3. Demonstartes ds_append_data() vs ds1.append)
#        ds_append_data() function add a value to data storage for
#        each call (5 values will be added) ds1.append only adds the 
#        value it holds at end of execution.
#     4. Only push DS if full (if sample rate of data storage is set to -1)
#


if(plc1.firstscan) {
  println('PLC initilizes!');
  static.enable_push := 1;
};

global.data := global.data + 1;

static.scale:=0.123456789;
static.dsTestValue:=ec0.s3.positionActual01*static.scale+global.data;
var errorCode:=ds_append_data(1,static.dsTestValue);
if(errorCode){
  plc3.error:=errorCode;
};

errorCode:=ds_append_data(1,static.dsTestValue+1);
if(errorCode){
  plc3.error:=errorCode;
};

errorCode:=ds_append_data(1,static.dsTestValue+2);
if(errorCode){
  plc3.error:=errorCode;
};

errorCode:=ds_append_data(1,static.dsTestValue+3);
if(errorCode){
  plc3.error:=errorCode;
};

errorCode:=ds_append_data(1,static.dsTestValue+4);
if(errorCode){
  plc3.error:=errorCode;
};

# ds<id>.append
# if ds<id>.append is written to a value will be appended after execution of this PLC 
# Only one value per cycle is possible to add (only 77 will be appended)
ds1.append:=33;
ds1.append:=77;

# Clear data storage (will be cleared each time ds_clear() is executed)
# ds<>.clear clears if value is true after execution of this PLC code.
if(static.dsTestValue>10000){
  static.dsTestValue:=0;
  global.data := 0;
  errorCode:=ds_clear_data(1);
  if(errorCode){
    plc3.error:=errorCode;
  };
};

if(ds_is_full(1)) {
  # Push data to epics ( NOTE setting T_SMP_MS = -1)
  if(static.enable_push){
    ds_push_asyn(1);
  };
  println('Average:',ds_get_avg(1));
  println('Min:    ',ds_get_min(1));
  println('Max:    ',ds_get_max(1));
  ds_clear_data(1);
};


