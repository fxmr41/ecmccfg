##############################################################################
## Example config for ESS crate of type MCU1025
## Slit demo:
## Axis 1: Slit center position (virt)
## Axis 2: Slit gap/opening (virt)
## Axis 3: Right blade (normal)
## Axis 4: Left blade (normal)
##
## Note:
##  Softlimits of the virtual axes are derived from the softlimts of the physical axes dynamically (in the sync code).
##  These softlimits are however set slightly more narrow, $(SOFT_OFFSET=2), in order to not trip the softlimits of the physical axes. 

# Apply offset
epicsEnvSet(SOFT_OFFSET,3)

# Choose to use dynamic softlimits ("cfg_softlim") or dynamic plc interlocks ("cfg_plc_il")
epicsEnvSet(CFG,"cfg_softlim")

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg 8.0.0

# Epics Motor record driver that will be used:
epicsEnvShow(ECMC_MR_MODULE)

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=error_handling"

##############################################################################
## Configure hardware:

epicsEnvSet("ECMC_EC_OVERSAMPLING_FACTOR" ,"50")

ecmcFileExist($(ecmccfg_DIR)ecmcMCU1025.cmd,1)
$(SCRIPTEXEC) $(ecmccfg_DIR)ecmcMCU1025.cmd

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

epicsEnvUnset("ECMC_EC_OVERSAMPLING_FACTOR")

# ADDITIONAL SETUP
# Set all outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput01,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput02,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput03,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput04,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput05,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput06,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput07,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(${ECMC_EC_SLAVE_NUM_DIG_OUT},binaryOutput08,1)"
# END of ADDITIONAL SETUP

##############################################################################
## AXIS 3 (physical right motor)
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./${CFG=cfg}/right.ax)
$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./${CFG=cfg}/right.sax)

##############################################################################
## AXIS 4 (physical left motor)
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./${CFG=cfg}/left.ax)
$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./${CFG=cfg}/left.sax)

##############################################################################
## AXIS 1 (slit center position)
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./${CFG=cfg}/center.vax)
$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./${CFG=cfg}/center.sax)

##############################################################################
## AXIS 2 (slit opening)
#
epicsEnvSet("DEV",      "$(IOC)")
$(SCRIPTEXEC) ($(ecmccfg_DIR)configureVirtualAxis.cmd, CONFIG=./${CFG=cfg}/gap.vax)
$(SCRIPTEXEC) ($(ecmccfg_DIR)applyAxisSynchronization.cmd, CONFIG=./${CFG=cfg}/gap.sax)

##############################################################################
############# Configure diagnostics:

# Disable alarms when at softlimit
#ecmcConfigOrDie "Cfg.SetAxisEnableAlarmAtSoftLimit(1,0)"
#ecmcConfigOrDie "Cfg.SetAxisEnableAlarmAtSoftLimit(2,0)"
#ecmcConfigOrDie "Cfg.SetAxisEnableAlarmAtSoftLimit(3,0)"
#ecmcConfigOrDie "Cfg.SetAxisEnableAlarmAtSoftLimit(4,0)"

##############################################################################
## PLC 0: 
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=1000,FILE=./print_softlimits.plc, PLC_MACROS='DBG=,PLC_ID=0'")


ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"

# go active
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)


#asynSetTraceMask(MC_CPU1,-1,1)
#asynSetTraceIOMask(MC_CPU1,-1,6)
#asynSetTraceInfoMask(MC_CPU1,-1,1)

iocInit()

dbpf $(IOC):xl.SPAM 0
dbpf $(IOC):xr.SPAM 0
dbpf $(IOC):xp.SPAM 0
dbpf $(IOC):xg.SPAM 0
